(define (if [x u64] [y u64]) u64
  (block (start)
    (set nine (const u64 9))
    (set f (cmp u64 gt x nine))
    (cond_jump f (then) (else))
  )
  (block (then)
    (set r (const u64 3))
    (set r (add u64 r x))
    (jump (done))
  )
  (block (else)
    (set r (const u64 5))
    (set a (add u64 x y))
    (set r (add u64 r a))
    (jump (done))
  )
  (block (done)
    (ret r)
  )
)
    
(define (entry) void
  (block (start)
    (set x (const u64 2))
    (set y (const u64 123))
    (set res (call u64 (if x y)))
    (call void (print_u64 res))
    (set ex (const u64 130))
    (call void (assert_eq_u64 res ex))
    (ret)
  )
)
